/*!
* Type definitions for Nethereum.Generators.DuoCode, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
*
* Generated by DuoCode Compiler 3.0.1654.0 [Trial]
*/

/// <reference path="./mscorlib.d.ts" />

declare module Nethereum {
    module Generators {
        // Nethereum.Generators.ContractProjectGenerator
        export interface ContractProjectGenerator extends System.Object {
            get_ContractABI(): Model.ContractABI;
            get_ContractName(): string;
            get_ByteCode(): string;
            get_BaseNamespace(): string;
            get_ServiceNamespace(): string;
            get_CQSNamespace(): string;
            get_DTONamespace(): string;
            get_BaseOutputPath(): string;
            get_PathDelimiter(): string;
            GenerateAll(): Core.GeneratedFile[];
            GenerateService(): Core.GeneratedFile;
            GenerateAllCQSMessages(): System.Collections.Generic.List$1<Core.GeneratedFile>;
            GenerateAllFunctionDTOs(): System.Collections.Generic.List$1<Core.GeneratedFile>;
            GenerateAllEventDTOs(): System.Collections.Generic.List$1<Core.GeneratedFile>;
            GeneratCQSFunctionMessages(): System.Collections.Generic.List$1<Core.GeneratedFile>;
            GeneratCQSMessageDeployment(): Core.GeneratedFile;
            GetFullNamespace(namespace: string): string;
            GetFullPath(namespace: string): string;
        }
        export interface ContractProjectGeneratorTypeFunc extends TypeFunction {
            (): ContractProjectGeneratorTypeFunc;
            prototype: ContractProjectGenerator;
            new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, baseOutputPath: string, pathDelimiter: string): ContractProjectGenerator;
            ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, baseOutputPath: string, pathDelimiter: string): ContractProjectGenerator; };
        }
        const ContractProjectGenerator: ContractProjectGeneratorTypeFunc;

        // Nethereum.Generators.CsharpLibraryGenerator
        export interface CsharpLibraryGenerator extends System.Object {
            get_ProjectFileName(): string;
            GenerateFileContent(outputPath: string): Core.GeneratedFile;
        }
        export interface CsharpLibraryGeneratorTypeFunc extends TypeFunction {
            (): CsharpLibraryGeneratorTypeFunc;
            prototype: CsharpLibraryGenerator;
            new (projectFileName: string): CsharpLibraryGenerator;
            ctor: { new (projectFileName: string): CsharpLibraryGenerator; };
        }
        const CsharpLibraryGenerator: CsharpLibraryGeneratorTypeFunc;
        module Core {
            // Nethereum.Generators.Core.ABITypeToCSharpType
            export interface ABITypeToCSharpType extends System.Object {
                GetTypeMap(typeName: string, outputMapType?: boolean): string;
            }
            export interface ABITypeToCSharpTypeTypeFunc extends TypeFunction {
                (): ABITypeToCSharpTypeTypeFunc;
                prototype: ABITypeToCSharpType;
                new (): ABITypeToCSharpType;
                ctor: { new (): ABITypeToCSharpType; };
            }
            const ABITypeToCSharpType: ABITypeToCSharpTypeTypeFunc;

            // Nethereum.Generators.Core.ClassGeneratorBase<TClassTemplate, TClassModel>
            export interface ClassGeneratorBase$2<TClassTemplate, TClassModel> extends System.Object, IFileGenerator, IGenerator {
                GenerateFileContent$1(outputPath: string): GeneratedFile;
                GenerateFileContent(): string;
                GetFileName(): string;
                GenerateClass(): string;
            }
            export interface ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel> extends TypeFunction {
                (): ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel>;
                prototype: ClassGeneratorBase$2<TClassTemplate, TClassModel>;
                new (): ClassGeneratorBase$2<TClassTemplate, TClassModel>;
                ctor: { new (): ClassGeneratorBase$2<TClassTemplate, TClassModel>; };
            }
            export function ClassGeneratorBase$2<TClassTemplate, TClassModel>(TClassTemplate: TypeArg<TClassTemplate>, TClassModel: TypeArg<TClassModel>): ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel>;

            // Nethereum.Generators.Core.CommonGenerators
            export interface CommonGenerators extends System.Object {
                GenerateVariableName(value: string): string;
                GeneratePropertyName(value: string): string;
                GenerateClassName(value: string): string;
            }
            export interface CommonGeneratorsTypeFunc extends TypeFunction {
                (): CommonGeneratorsTypeFunc;
                prototype: CommonGenerators;
                new (): CommonGenerators;
                ctor: { new (): CommonGenerators; };
            }
            const CommonGenerators: CommonGeneratorsTypeFunc;

            // Nethereum.Generators.Core.FunctionABIModel
            export interface FunctionABIModel extends System.Object {
                get_FunctionABI(): Model.FunctionABI;
                GetSingleOutputGenericReturnType(): string;
                GetSingleOutputReturnType(): string;
                GetSingleAbiReturnType(): string;
                IsMultipleOutput(): boolean;
                IsSingleOutput(): boolean;
                HasNoReturn(): boolean;
                IsTransaction(): boolean;
            }
            export interface FunctionABIModelTypeFunc extends TypeFunction {
                (): FunctionABIModelTypeFunc;
                prototype: FunctionABIModel;
                new (functionABI: Model.FunctionABI): FunctionABIModel;
                ctor: { new (functionABI: Model.FunctionABI): FunctionABIModel; };
            }
            const FunctionABIModel: FunctionABIModelTypeFunc;

            // Nethereum.Generators.Core.GeneratedFile
            export interface GeneratedFile extends System.Object {
                get_GeneratedCode(): string;
                get_FileName(): string;
                get_OutputFolder(): string;
            }
            export interface GeneratedFileTypeFunc extends TypeFunction {
                (): GeneratedFileTypeFunc;
                prototype: GeneratedFile;
                new (generatedCode: string, fileName: string, outputFolder: string): GeneratedFile;
                ctor: { new (generatedCode: string, fileName: string, outputFolder: string): GeneratedFile; };
            }
            const GeneratedFile: GeneratedFileTypeFunc;

            // Nethereum.Generators.Core.IClassModel
            export interface IClassModel {
                Nethereum$Generators$Core$IClassModel$GetTypeName(): string;
                Nethereum$Generators$Core$IClassModel$GetFileName(): string;
                Nethereum$Generators$Core$IClassModel$GetVariableName(): string;
                Nethereum$Generators$Core$IClassModel$get_Namespace(): string;
            }
            const IClassModel: TypeFunction;

            // Nethereum.Generators.Core.IClassTemplate
            export interface IClassTemplate {
                Nethereum$Generators$Core$IClassTemplate$GenerateClass(): string;
                Nethereum$Generators$Core$IClassTemplate$GenerateFullClass(): string;
            }
            const IClassTemplate: TypeFunction;

            // Nethereum.Generators.Core.IFileGenerator
            export interface IFileGenerator extends IGenerator {
                Nethereum$Generators$Core$IFileGenerator$GenerateFileContent$1(outputPath: string): GeneratedFile;
                Nethereum$Generators$Core$IFileGenerator$GenerateFileContent(): string;
                Nethereum$Generators$Core$IFileGenerator$GetFileName(): string;
            }
            const IFileGenerator: TypeFunction;

            // Nethereum.Generators.Core.IGenerator
            export interface IGenerator {
                Nethereum$Generators$Core$IGenerator$GenerateClass(): string;
            }
            const IGenerator: TypeFunction;

            // Nethereum.Generators.Core.ParameterABIModel
            export interface ParameterABIModel extends System.Object {
                GetParameterVariableName$1(name: string, order: int): string;
                GetParameterPropertyName(parameter: Model.Parameter): string;
                GetParameterVariableName(parameter: Model.Parameter): string;
                GetParameterPropertyName$1(name: string, order: int): string;
                GetParameterCSharpOutputMapType(parameter: Model.Parameter): string;
                GetParameterCSharpInputMapType(parameter: Model.Parameter): string;
                GetParameterName(name: string, order: int): string;
            }
            export interface ParameterABIModelTypeFunc extends TypeFunction {
                (): ParameterABIModelTypeFunc;
                prototype: ParameterABIModel;
                new (): ParameterABIModel;
                ctor: { new (): ParameterABIModel; };
            }
            const ParameterABIModel: ParameterABIModelTypeFunc;

            // Nethereum.Generators.Core.SpaceUtils
            export interface SpaceUtils extends System.Object {
            }
            export interface SpaceUtilsTypeFunc extends TypeFunction {
                (): SpaceUtilsTypeFunc;
                prototype: SpaceUtils;
                NoTabs: string;
                OneTab: string;
                TwoTabs: string;
                ThreeTabs: string;
                new (): SpaceUtils;
                ctor: { new (): SpaceUtils; };
            }
            const SpaceUtils: SpaceUtilsTypeFunc;

            // Nethereum.Generators.Core.TypeMessageModel
            export interface TypeMessageModel extends System.Object, IClassModel {
                get_Namespace(): string;
                GetTypeName$1(name: string): string;
                GetFileName$1(name: string): string;
                GetVariableName$1(name: string): string;
                GetTypeName(): string;
                GetFileName(): string;
                GetVariableName(): string;
            }
            export interface TypeMessageModelTypeFunc extends TypeFunction {
                (): TypeMessageModelTypeFunc;
                prototype: TypeMessageModel;
            }
            const TypeMessageModel: TypeMessageModelTypeFunc;

            // Nethereum.Generators.Core.Utils
            export interface Utils extends System.Object {
                RemoveUnderscorePrefix(value: string): string;
                LowerCaseFirstCharAndRemoveUnderscorePrefix(value: string): string;
                CapitaliseFirstCharAndRemoveUnderscorePrefix(value: string): string;
                LowerCaseFirstChar(value: string): string;
                CapitaliseFirstChar(value: string): string;
                GetBooleanAsString(value: boolean): string;
            }
            export interface UtilsTypeFunc extends TypeFunction {
                (): UtilsTypeFunc;
                prototype: Utils;
                new (): Utils;
                ctor: { new (): Utils; };
            }
            const Utils: UtilsTypeFunc;
        }
        module CQS {
            // Nethereum.Generators.CQS.ContractDeploymentCQSMessageGenerator
            export interface ContractDeploymentCQSMessageGenerator extends Core.ClassGeneratorBase$2<ContractDeploymentCQSMessageTemplate, ContractDeploymentCQSMessageModel>, Core.IFileGenerator, Core.IGenerator {
            }
            export interface ContractDeploymentCQSMessageGeneratorTypeFunc extends TypeFunction {
                (): ContractDeploymentCQSMessageGeneratorTypeFunc;
                prototype: ContractDeploymentCQSMessageGenerator;
                new (abi: Model.ConstructorABI, namespaceName: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageGenerator;
                ctor: { new (abi: Model.ConstructorABI, namespaceName: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageGenerator; };
            }
            const ContractDeploymentCQSMessageGenerator: ContractDeploymentCQSMessageGeneratorTypeFunc;

            // Nethereum.Generators.CQS.ContractDeploymentCQSMessageModel
            export interface ContractDeploymentCQSMessageModel extends Core.TypeMessageModel, Core.IClassModel {
                get_ConstructorABI(): Model.ConstructorABI;
                get_ByteCode(): string;
                get_ContractName(): string;
            }
            export interface ContractDeploymentCQSMessageModelTypeFunc extends TypeFunction {
                (): ContractDeploymentCQSMessageModelTypeFunc;
                prototype: ContractDeploymentCQSMessageModel;
                new (constructorABI: Model.ConstructorABI, namespace: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageModel;
                ctor: { new (constructorABI: Model.ConstructorABI, namespace: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageModel; };
            }
            const ContractDeploymentCQSMessageModel: ContractDeploymentCQSMessageModelTypeFunc;

            // Nethereum.Generators.CQS.ContractDeploymentCQSMessageTemplate
            export interface ContractDeploymentCQSMessageTemplate extends System.Object, Core.IClassTemplate {
                GenerateFullClass(): string;
                GenerateClass(): string;
            }
            export interface ContractDeploymentCQSMessageTemplateTypeFunc extends TypeFunction {
                (): ContractDeploymentCQSMessageTemplateTypeFunc;
                prototype: ContractDeploymentCQSMessageTemplate;
                new (model: ContractDeploymentCQSMessageModel): ContractDeploymentCQSMessageTemplate;
                ctor: { new (model: ContractDeploymentCQSMessageModel): ContractDeploymentCQSMessageTemplate; };
            }
            const ContractDeploymentCQSMessageTemplate: ContractDeploymentCQSMessageTemplateTypeFunc;

            // Nethereum.Generators.CQS.FunctionCQSMessageGenerator
            export interface FunctionCQSMessageGenerator extends Core.ClassGeneratorBase$2<FunctionCQSMessageTemplate, FunctionCQSMessageModel>, Core.IFileGenerator, Core.IGenerator {
                get_FunctionABI(): Model.FunctionABI;
            }
            export interface FunctionCQSMessageGeneratorTypeFunc extends TypeFunction {
                (): FunctionCQSMessageGeneratorTypeFunc;
                prototype: FunctionCQSMessageGenerator;
                new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string): FunctionCQSMessageGenerator;
                ctor: { new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string): FunctionCQSMessageGenerator; };
            }
            const FunctionCQSMessageGenerator: FunctionCQSMessageGeneratorTypeFunc;

            // Nethereum.Generators.CQS.FunctionCQSMessageModel
            export interface FunctionCQSMessageModel extends Core.TypeMessageModel, Core.IClassModel {
                CLASSNAME_SUFFIX: string;
                get_FunctionABI(): Model.FunctionABI;
            }
            export interface FunctionCQSMessageModelTypeFunc extends TypeFunction {
                (): FunctionCQSMessageModelTypeFunc;
                prototype: FunctionCQSMessageModel;
                new (functionABI: Model.FunctionABI, namespace: string): FunctionCQSMessageModel;
                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionCQSMessageModel; };
            }
            const FunctionCQSMessageModel: FunctionCQSMessageModelTypeFunc;

            // Nethereum.Generators.CQS.FunctionCQSMessageTemplate
            export interface FunctionCQSMessageTemplate extends System.Object, Core.IClassTemplate {
                GenerateFullClass(): string;
                GenerateClass(): string;
            }
            export interface FunctionCQSMessageTemplateTypeFunc extends TypeFunction {
                (): FunctionCQSMessageTemplateTypeFunc;
                prototype: FunctionCQSMessageTemplate;
                new (model: FunctionCQSMessageModel, functionOutputDTOModel: DTOs.FunctionOutputDTOModel, functionABIModel: Core.FunctionABIModel): FunctionCQSMessageTemplate;
                ctor: { new (model: FunctionCQSMessageModel, functionOutputDTOModel: DTOs.FunctionOutputDTOModel, functionABIModel: Core.FunctionABIModel): FunctionCQSMessageTemplate; };
            }
            const FunctionCQSMessageTemplate: FunctionCQSMessageTemplateTypeFunc;
        }
        module DTOs {
            // Nethereum.Generators.DTOs.EventDTOGenerator
            export interface EventDTOGenerator extends Core.ClassGeneratorBase$2<EventDTOTemplate, EventDTOModel>, Core.IFileGenerator, Core.IGenerator {
            }
            export interface EventDTOGeneratorTypeFunc extends TypeFunction {
                (): EventDTOGeneratorTypeFunc;
                prototype: EventDTOGenerator;
                new (abi: Model.EventABI, namespace: string): EventDTOGenerator;
                ctor: { new (abi: Model.EventABI, namespace: string): EventDTOGenerator; };
            }
            const EventDTOGenerator: EventDTOGeneratorTypeFunc;

            // Nethereum.Generators.DTOs.EventDTOModel
            export interface EventDTOModel extends Core.TypeMessageModel, Core.IClassModel {
                get_EventABI(): Model.EventABI;
                CanGenerateOutputDTO(): boolean;
            }
            export interface EventDTOModelTypeFunc extends TypeFunction {
                (): EventDTOModelTypeFunc;
                prototype: EventDTOModel;
                SUFFIX_NAME: string;
                new (eventABI: Model.EventABI, namespace: string): EventDTOModel;
                ctor: { new (eventABI: Model.EventABI, namespace: string): EventDTOModel; };
            }
            const EventDTOModel: EventDTOModelTypeFunc;

            // Nethereum.Generators.DTOs.EventDTOTemplate
            export interface EventDTOTemplate extends System.Object, Core.IClassTemplate {
                GenerateFullClass(): string;
                GenerateClass(): string;
            }
            export interface EventDTOTemplateTypeFunc extends TypeFunction {
                (): EventDTOTemplateTypeFunc;
                prototype: EventDTOTemplate;
                new (eventDTOModel: EventDTOModel): EventDTOTemplate;
                ctor: { new (eventDTOModel: EventDTOModel): EventDTOTemplate; };
            }
            const EventDTOTemplate: EventDTOTemplateTypeFunc;

            // Nethereum.Generators.DTOs.FunctionOutputDTOGenerator
            export interface FunctionOutputDTOGenerator extends Core.ClassGeneratorBase$2<FunctionOutputDTOTemplate, FunctionOutputDTOModel>, Core.IFileGenerator, Core.IGenerator {
            }
            export interface FunctionOutputDTOGeneratorTypeFunc extends TypeFunction {
                (): FunctionOutputDTOGeneratorTypeFunc;
                prototype: FunctionOutputDTOGenerator;
                new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOGenerator;
                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOGenerator; };
            }
            const FunctionOutputDTOGenerator: FunctionOutputDTOGeneratorTypeFunc;

            // Nethereum.Generators.DTOs.FunctionOutputDTOModel
            export interface FunctionOutputDTOModel extends Core.TypeMessageModel, Core.IClassModel {
                get_FunctionABI(): Model.FunctionABI;
                CanGenerateOutputDTO(): boolean;
            }
            export interface FunctionOutputDTOModelTypeFunc extends TypeFunction {
                (): FunctionOutputDTOModelTypeFunc;
                prototype: FunctionOutputDTOModel;
                new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOModel;
                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOModel; };
            }
            const FunctionOutputDTOModel: FunctionOutputDTOModelTypeFunc;

            // Nethereum.Generators.DTOs.FunctionOutputDTOTemplate
            export interface FunctionOutputDTOTemplate extends System.Object, Core.IClassTemplate {
                GenerateFullClass(): string;
                GenerateClass(): string;
            }
            export interface FunctionOutputDTOTemplateTypeFunc extends TypeFunction {
                (): FunctionOutputDTOTemplateTypeFunc;
                prototype: FunctionOutputDTOTemplate;
                new (model: FunctionOutputDTOModel): FunctionOutputDTOTemplate;
                ctor: { new (model: FunctionOutputDTOModel): FunctionOutputDTOTemplate; };
            }
            const FunctionOutputDTOTemplate: FunctionOutputDTOTemplateTypeFunc;

            // Nethereum.Generators.DTOs.ParameterABIEventDTOTemplate
            export interface ParameterABIEventDTOTemplate extends System.Object {
                GenerateAllProperties(parameters: Model.Parameter[]): string;
                GenerateProperty(parameter: Model.Parameter): string;
            }
            export interface ParameterABIEventDTOTemplateTypeFunc extends TypeFunction {
                (): ParameterABIEventDTOTemplateTypeFunc;
                prototype: ParameterABIEventDTOTemplate;
                new (): ParameterABIEventDTOTemplate;
                ctor: { new (): ParameterABIEventDTOTemplate; };
            }
            const ParameterABIEventDTOTemplate: ParameterABIEventDTOTemplateTypeFunc;

            // Nethereum.Generators.DTOs.ParameterABIFunctionDTOTemplate
            export interface ParameterABIFunctionDTOTemplate extends System.Object {
                GenerateAllProperties(parameters: Model.Parameter[]): string;
                GenerateProperty(parameter: Model.Parameter): string;
            }
            export interface ParameterABIFunctionDTOTemplateTypeFunc extends TypeFunction {
                (): ParameterABIFunctionDTOTemplateTypeFunc;
                prototype: ParameterABIFunctionDTOTemplate;
                new (): ParameterABIFunctionDTOTemplate;
                ctor: { new (): ParameterABIFunctionDTOTemplate; };
            }
            const ParameterABIFunctionDTOTemplate: ParameterABIFunctionDTOTemplateTypeFunc;
        }
        module Model {
            // Nethereum.Generators.Model.ConstructorABI
            export interface ConstructorABI extends System.Object {
                get_InputParameters(): Parameter[];
                set_InputParameters(value: Parameter[]): void;
            }
            export interface ConstructorABITypeFunc extends TypeFunction {
                (): ConstructorABITypeFunc;
                prototype: ConstructorABI;
                new (): ConstructorABI;
                ctor: { new (): ConstructorABI; };
            }
            const ConstructorABI: ConstructorABITypeFunc;

            // Nethereum.Generators.Model.ContractABI
            export interface ContractABI extends System.Object {
                get_Functions(): FunctionABI[];
                set_Functions(value: FunctionABI[]): void;
                get_Constructor(): ConstructorABI;
                set_Constructor(value: ConstructorABI): void;
                get_Events(): EventABI[];
                set_Events(value: EventABI[]): void;
            }
            export interface ContractABITypeFunc extends TypeFunction {
                (): ContractABITypeFunc;
                prototype: ContractABI;
                new (): ContractABI;
                ctor: { new (): ContractABI; };
            }
            const ContractABI: ContractABITypeFunc;

            // Nethereum.Generators.Model.EventABI
            export interface EventABI extends System.Object {
                get_Name(): string;
                get_InputParameters(): Parameter[];
                set_InputParameters(value: Parameter[]): void;
            }
            export interface EventABITypeFunc extends TypeFunction {
                (): EventABITypeFunc;
                prototype: EventABI;
                new (name: string): EventABI;
                ctor: { new (name: string): EventABI; };
            }
            const EventABI: EventABITypeFunc;

            // Nethereum.Generators.Model.FunctionABI
            export interface FunctionABI extends System.Object {
                get_Serpent(): boolean;
                get_Constant(): boolean;
                get_Name(): string;
                get_InputParameters(): Parameter[];
                set_InputParameters(value: Parameter[]): void;
                get_OutputParameters(): Parameter[];
                set_OutputParameters(value: Parameter[]): void;
            }
            export interface FunctionABITypeFunc extends TypeFunction {
                (): FunctionABITypeFunc;
                prototype: FunctionABI;
                new (name: string, constant: boolean, serpent?: boolean): FunctionABI;
                ctor: { new (name: string, constant: boolean, serpent?: boolean): FunctionABI; };
            }
            const FunctionABI: FunctionABITypeFunc;

            // Nethereum.Generators.Model.Parameter
            export interface Parameter extends System.Object {
                get_Name(): string;
                get_Type(): string;
                get_Order(): int;
                get_Indexed(): boolean;
                set_Indexed(value: boolean): void;
                get_SerpentSignature(): string;
            }
            export interface ParameterTypeFunc extends TypeFunction {
                (): ParameterTypeFunc;
                prototype: Parameter;
                ctor$1: { new (type: string, name?: string, order?: int, serpentSignature?: string): Parameter; };
                new (type: string, order: int): Parameter;
                ctor: { new (type: string, order: int): Parameter; };
            }
            const Parameter: ParameterTypeFunc;
        }
        module Service {
            // Nethereum.Generators.Service.ContractDeploymentServiceMethodsTemplate
            export interface ContractDeploymentServiceMethodsTemplate extends System.Object {
                GenerateMethods(): string;
            }
            export interface ContractDeploymentServiceMethodsTemplateTypeFunc extends TypeFunction {
                (): ContractDeploymentServiceMethodsTemplateTypeFunc;
                prototype: ContractDeploymentServiceMethodsTemplate;
                new (model: ServiceModel): ContractDeploymentServiceMethodsTemplate;
                ctor: { new (model: ServiceModel): ContractDeploymentServiceMethodsTemplate; };
            }
            const ContractDeploymentServiceMethodsTemplate: ContractDeploymentServiceMethodsTemplateTypeFunc;

            // Nethereum.Generators.Service.FunctionServiceMethodTemplate
            export interface FunctionServiceMethodTemplate extends System.Object {
                GenerateMethods(): string;
                GenerateMethod(functionABI: Model.FunctionABI): string;
            }
            export interface FunctionServiceMethodTemplateTypeFunc extends TypeFunction {
                (): FunctionServiceMethodTemplateTypeFunc;
                prototype: FunctionServiceMethodTemplate;
                new (model: ServiceModel): FunctionServiceMethodTemplate;
                ctor: { new (model: ServiceModel): FunctionServiceMethodTemplate; };
            }
            const FunctionServiceMethodTemplate: FunctionServiceMethodTemplateTypeFunc;

            // Nethereum.Generators.Service.ServiceGenerator
            export interface ServiceGenerator extends Core.ClassGeneratorBase$2<ServiceTemplate, ServiceModel>, Core.IFileGenerator, Core.IGenerator {
                get_ContractABI(): Model.ContractABI;
            }
            export interface ServiceGeneratorTypeFunc extends TypeFunction {
                (): ServiceGeneratorTypeFunc;
                prototype: ServiceGenerator;
                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceGenerator;
                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceGenerator; };
            }
            const ServiceGenerator: ServiceGeneratorTypeFunc;

            // Nethereum.Generators.Service.ServiceModel
            export interface ServiceModel extends Core.TypeMessageModel, Core.IClassModel {
                CLASSNAME_SUFFIX: string;
                get_ContractABI(): Model.ContractABI;
                get_ContractName(): string;
                get_CQSNamespace(): string;
                get_FunctionOutputNamespace(): string;
                get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;
            }
            export interface ServiceModelTypeFunc extends TypeFunction {
                (): ServiceModelTypeFunc;
                prototype: ServiceModel;
                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceModel;
                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceModel; };
            }
            const ServiceModel: ServiceModelTypeFunc;

            // Nethereum.Generators.Service.ServiceTemplate
            export interface ServiceTemplate extends System.Object, Core.IClassTemplate {
                GenerateFullClass(): string;
                GenerateClass(): string;
            }
            export interface ServiceTemplateTypeFunc extends TypeFunction {
                (): ServiceTemplateTypeFunc;
                prototype: ServiceTemplate;
                new (model: ServiceModel): ServiceTemplate;
                ctor: { new (model: ServiceModel): ServiceTemplate; };
            }
            const ServiceTemplate: ServiceTemplateTypeFunc;
        }
    }
}
